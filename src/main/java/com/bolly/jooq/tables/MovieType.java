/**
 * This class is generated by jOOQ
 */
package com.bolly.jooq.tables;


import com.bolly.jooq.Bolly;
import com.bolly.jooq.Keys;
import com.bolly.jooq.tables.records.MovieTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MovieType extends TableImpl<MovieTypeRecord> {

    private static final long serialVersionUID = -61414035;

    /**
     * The reference instance of <code>bolly.MOVIE_TYPE</code>
     */
    public static final MovieType MOVIE_TYPE = new MovieType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MovieTypeRecord> getRecordType() {
        return MovieTypeRecord.class;
    }

    /**
     * The column <code>bolly.MOVIE_TYPE.movie_id</code>.
     */
    public final TableField<MovieTypeRecord, Integer> MOVIE_ID = createField("movie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bolly.MOVIE_TYPE.type_id</code>.
     */
    public final TableField<MovieTypeRecord, Byte> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bolly.MOVIE_TYPE</code> table reference
     */
    public MovieType() {
        this("MOVIE_TYPE", null);
    }

    /**
     * Create an aliased <code>bolly.MOVIE_TYPE</code> table reference
     */
    public MovieType(String alias) {
        this(alias, MOVIE_TYPE);
    }

    private MovieType(String alias, Table<MovieTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MovieType(String alias, Table<MovieTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bolly.BOLLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MovieTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<MovieTypeRecord>>asList(Keys.KEY_MOVIE_TYPE_MT_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MovieTypeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MovieTypeRecord, ?>>asList(Keys.FK_MT_MOV, Keys.FK_MT_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MovieType as(String alias) {
        return new MovieType(alias, this);
    }

    /**
     * Rename this table
     */
    public MovieType rename(String name) {
        return new MovieType(name, null);
    }
}
